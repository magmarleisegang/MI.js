function Zone(n, t, i, r, u, f, e, o, s, h)
{
    arguments.length == 1 || arguments.length == 2 ? ($.extend(this, n), arguments.length == 2 && (this.Geometry = t)) : (this.Id = n, this.Name = t, this.ZoneType = i, this.Designation = r, this.Points = u, this.PointRadiusMeters = f, this.Comment = o, this.IsTrackingZone = s, this.Geometry = e, this.CategoryId = h)
}
function DoubleArrayToJSONString(n)
{
    var r,
        i,
        t,
        u;
    if (n == null || n == undefined || (r = n.length, r == 0))
        return null;
    for (i = "[" + n[0][0] + "," + n[0][1] + "]", t = 1; t < r; t++)
        u = "[" + n[t][0] + "," + n[t][1] + "]",
        i = i + "," + u;
    return "[" + i + "]"
}
function IntArrayToJSONString(n, t)
{
    var i = t.length;
    return i == 0 ? null : n == null ? "[" + t.join(",") + "]" : '{"' + n + '":[' + t.join(",") + "]}"
}
function StringArrayToJSONString(n, t)
{
    var u = t.length,
        i,
        r,
        f;
    if (u == 0)
        return null;
    for (i = '"' + t[0] + '"', r = 1; r < u; r++)
        f = ',"' + t[r] + '"',
        i = i + f;
    return '{"' + n + '":[' + i + "]}"
}
function GetDesignationId(n, t)
{
    for (var r = n.length, i = 0; i < r; i++)
        if (n[i] == t)
            return i;
    return null
}
function Trip(n, t, i, r, u, f, e, o, s, h, c, l, a, v, y, p, w, b, k, d, g, nt, tt, it)
{
    arguments.length == 1 ? ($.extend(this, n), this.Line = null) : (this.Id = n, this.Points = t, this.TripStartDate = i, this.TripEndDate = r, this.Duration = u, this.Distance = f, this.StartLoc = e, this.EndLoc = o, this.StartZoneId = s, this.EndZoneId = h, this.Designation = c, this.CategoryId = it, this.MaxSpeed = l, this.AvgSpeed = a, this.Comment = v, this.WKT = y, this.Title = w, this.VehicleId = b, this.StartZoneSnapped = k, this.EndZoneSnapped = d, this.StartZoneSelected = g, this.EndZoneSelected = nt, this.MergedTrip = tt, this.Line = p)
}
function GetCategoryDiv(n, t, i)
{
    for (var o = (n == null ? 0 : n).toString(2), u = o.length - 1, f = [], e, r = 0; r <= u; r++)
        o[u - r] == 1 && f.push(Math.pow(2, r));
    for (f.length < 5 ? u = f.length : f.length == 5 ? u = 4 : f.length > 5 && (u = 6), e = [], r = 0; r < u; r++)
        e.push("<div class='cat-" + u + (i === !1 ? " blocked" : "") + "' style='background-color:" + GetCategory(f[r]).sColourHex + "'><\/div>");
    return t == undefined || t == !0 ? "<div data-c='" + n + "' class='cat'>" + e.join("") + "<\/div>" : e.join("")
}
function GetCategory(n)
{
    if (ViewingDriverProfile())
        return m_DriverProfile.GetCategory(n);
    var t = {
            sColourHex: "white", sCategory: "None", iCategoryid: 0
        };
    return $.each(UserMappingSettings.Categories, function(i, r)
        {
            if (r.iCategoryId == n)
                return t = r, !1
        }), t
}
function GetCategoryColor(n)
{
    var t = GetCategory(n);
    return t.sColourHex
}
function GetCategoryText(n)
{
    for (var f = n.toString(2), i = f.length - 1, r = [], u, t = 0; t <= i; t++)
        f[i - t] == 1 && r.push(Math.pow(2, t));
    for (i = r.length, u = [], t = 0; t < i; t++)
        u.push(GetCategory(r[t]).sCategory);
    return u.join(", ")
}
function GetZoneTd(n, t, i, r, u)
{
    var f = "",
        o = "Click to create zone",
        s = "",
        e = "";
    return n != null ? (o = "Click to view zone", i ? (f = "*", e = "Snapped Zone") : r && (f = "~", e = "Selected Zone")) : t != null ? (f = "(U)", e = "Unknown Zone") : (t = "Unknown", s = "unknown"), u != undefined ? "<td class='comment'><span data-a='" + u + "' class='link " + s + "' title='" + o + "'>" + (t == null ? "Unknown" : t) + "<\/span><span class='id' title='" + e + "'>&nbsp;" + f + "<\/span><\/td>" : "<td class='comment'>" + (t == null ? "Unknown" : t) + "<span class='id' title='" + e + "'>&nbsp;" + f + "<\/span><\/td>"
}
function AddTitleString(n, t, i, r)
{
    var u = ['<tr class="titleRow"><td colspan="' + t + '">' + n + "<\/td>"];
    return i === !0 && u.push('<td class="car-column"><\/td>'), r === !0 && u.push('<td class="driver-column"><\/td>'), u.push("<\/tr>"), u.join("")
}
function IdToJSONString(n)
{
    return "{'" + n + "':" + this.Id + "}"
}
function getVehicle(n)
{
    var t = null;
    return $.each(UserMappingSettings.Vehicles, function(i, r)
        {
            if (parseInt(n) == r.iVehicleId)
                return t = r, !1
        }), t
}
function URLParams(n)
{
    var u = n.split("?")[1],
        i,
        t,
        r;
    if (u == undefined)
    {
        this.IsEmpty = !0;
        return
    }
    for (i = u.split("&"), this.Count = i.length, t = 0; t < this.Count; t++)
        r = i[t].split("="),
        this[r[0]] = r[1];
    this.IsEmpty = !1
}
function Time(n)
{
    var o,
        i,
        t,
        r,
        u,
        f,
        e;
    if (this.Original = n, this.Hours = 0, this.Minutes = 0, this.Seconds = 0, n == undefined && (n = "0hr 0min 0sec", this.Original = n), typeof n == "string")
        for (o = n.replace("hr", "h:").replace("min", "m:").replace("sec", "s:"), i = o.split(":"), t = 0; t < i.length; t++)
            r = new Number(i[t].substring(0, i[t].length - 1)),
            u = i[t].charAt(i[t].length - 1),
            u == "h" ? this.Hours = r : u == "m" ? this.Minutes = r : u == "s" && (this.Seconds = r);
    else
        this.Seconds = Math.abs(n) / 1e3,
        this.Seconds >= 60 && (f = parseInt(this.Seconds / 60), this.Seconds -= f * 60, this.Minutes += f),
        this.Minutes >= 60 && (e = parseInt(this.Minutes / 60), this.Minutes -= e * 60, this.Hours += e)
}
function ArrayNullOrEmpty(n)
{
    return n == null || n == undefined ? !0 : n.length == undefined ? !0 : n.length == 0 ? !0 : !1
}
var popupMenu,
    InvalidShapeMsg;
(function(n)
{
    n.fn.inlineEdit = function(t)
    {
        function u()
        {
            var u = r.currentValue != null ? r.currentValue : (u = i.val()).length == 0 ? i.text() : u,
                t = document.createElement("INPUT");
            t.type = "text",
            t.value = u,
            i.attr("class") != undefined && (t.className = i.attr("class")),
            r.useReplace ? i.replaceWith(t) : (i.html(t), i.unbind("click")),
            r.blurOnEnter === !0 && n(document).keyup(function(i)
            {
                i.which == 13 && n(t).blur()
            }),
            n(t).blur(e),
            setTimeout(function()
            {
                n(t).focus()
            }, 5)
        }
        function e()
        {
            var f = n(this),
                t = f.val();
            i.val(t).text(t),
            r.useReplace ? f.replaceWith(i) : i.html(t),
            i.click(u),
            r.callback != null && r.callback(i)
        }
        var r = {
                useReplace: !0, callback: null, bindOnce: !1, blurOnEnter: !1, currentValue: null
            },
            f,
            i;
        arguments.length > 0 && n.extend(r, t),
        f = this.parent(),
        i = this,
        r.bindOnce ? u() : i.click(u)
    }
})(jQuery),
function(n)
{
    function t(n, t)
    {
        var r,
            s,
            u,
            f,
            o,
            e,
            i;
        for (n = n.html().replace(/(^\s*)|(\s*$)/g, ""), r = n.replace(/{/g, "{#").split(/[{}]{1,}/g), s = r.length, u = 0; u < s; u++)
            r[u].indexOf("#") == 0 && (f = r[u].substr(1).split("??"), o = null, f.length == 2 && (o = f[1]), f[0].indexOf(":") > 0 ? (i = f[0].split(":"), e = isNaN(i[1]) === !1 ? t[i[0]].toFixed(parseInt(i[1])) : i[1] === "trim" && t[i[0]] != null ? t[i[0]].replace(/[ &@#$%^&*]/g, "") : t[i[0]]) : e = t[f[0]], r[u] = e != null ? e : o);
        return r.join("")
    }
    n.fn.createTemplater = function(i)
    {
        return i == undefined && (i = this.selector), this._template = n(i).remove(), this.add = function(n)
                {
                    var i = t(this._template, n);
                    this.append(i)
                }, this
    },
    n.fn.bindTemplater = function(i)
    {
        return i == undefined && (i = this.selector), this._template = n(i).clone(), this.update = function(n)
                {
                    var i = t(this._template, n);
                    this.html(i)
                }, this
    },
    n.fn.addOnce = function(n, i)
    {
        var r = t(n, i);
        return this.append(r), this
    }
}(jQuery),
popupMenu = function(n, t)
{
    function h(n)
    {
        return $.contains(i[0], n.target) == !1 && (t.callbackOnBlur === !0 && t.selectionChangedCallback(null), f(), u != null && typeof u == "function" && (u(), u = null)), !0
    }
    function c(n)
    {
        return "<td>" + n + "<\/td>"
    }
    function l(n)
    {
        var i = document.createElement("TR");
        $(i).append("<td>X<\/td>"),
        $(i).click(function(i)
        {
            return n && t.selectionChangedCallback(i.target), f(), !1
        }),
        $(i).css("text-align", "right"),
        r.appendChild(i),
        i.onmousedown = this.clickHandler
    }
    function a(n)
    {
        if (t.selectionChangedCallback != null)
        {
            while (n.nodeName != "TD")
                n = n.parentNode;
            var i = t.selectionChangedCallback(n);
            i && f()
        }
        else
            f()
    }
    function f()
    {
        i.hide(),
        $(document).unbind("click", h),
        e = !1
    }
    var r,
        i;
    if (n == undefined)
    {
        alert("dataIn is undefined");
        return
    }
    var s = {
            div: "#popupMenu", drawRow: c, selectionChangedCallback: null, cssClass: null, callbackOnBlur: !1
        },
        u = null,
        e = !1,
        o = n;
    t = t != undefined ? jQuery.extend({}, s, t) : s,
    r = document.createElement("TABLE"),
    t.cssClass != null && $(r).addClass(t.cssClass),
    i = $(t.div),
    i.empty(),
    i[0].appendChild(r),
    this.clickHandler = function(n)
    {
        if (n != undefined)
        {
            n.stopPropagation();
            var t = n.target;
            a(t)
        }
    },
    i.mousedown(this.clickHandler),
    this.show = function(n, u, f)
    {
        var a,
            v,
            p,
            s,
            c,
            y;
        for (f != undefined && (f.preventDefault(), f.stopPropagation()), u.callback != undefined && (t.selectionChangedCallback = u.callback), $(r).empty(), a = u.selected, l(u.callbackOnClose), v = o.length, p = [], s = 0; s < v; s++)
            c = document.createElement("TR"),
            $(c).append(t.drawRow(o[s], a)),
            r.appendChild(c),
            c.onmousedown = this.clickHandler;
        return $(n).append(i), i.show(), i.offset($(n).offset()), $.browser.msie && $.browser.version == 7 && (y = $(r).html().replace("<BR>", "<BR/>"), $(r).html(y)), setTimeout(function()
                {
                    $(document).click(h)
                }, 500), e = !0, !1
    },
    this.close = function()
    {
        f()
    },
    this.isOpen = function()
    {
        return e
    },
    this.setDatasource = function(n)
    {
        o = n
    },
    this.onClose = function(n)
    {
        typeof n == "function" && (u = n)
    }
},
Format = function()
{
    return Number.prototype.metersToMiles = function()
        {
            return (this * .000621371192).toFixed(2)
        }, Number.prototype.metersToYards = function()
        {
            return (this * .9144).toFixed(0)
        }, {
                Distance: function(n)
                {
                    n = new Number(n);
                    switch (distanceUnit)
                    {
                        case"km":
                            return (n / 1e3).toFixed(2) + " km";
                        case"mi":
                            return n.metersToMiles() + " mi"
                    }
                }, DistanceSmall: function(n)
                    {
                        n = new Number(n);
                        switch (distanceUnit)
                        {
                            case"km":
                                return n.toFixed(0) + " m";
                            case"mi":
                                return n.metersToMiles() + " mi"
                        }
                    }, Speed: function(n)
                    {
                        n = new Number(n);
                        switch (distanceUnit)
                        {
                            case"km":
                                return n + " km/h";
                            case"mi":
                                return (n * .621371192).toFixed(0) + " mi/h"
                        }
                    }, Date: function(n)
                    {
                        return n
                    }, SliderMin: function()
                    {
                        switch (distanceUnit)
                        {
                            case"km":
                                return 10;
                            case"mi":
                                return 10.1
                        }
                    }, SliderMax: function()
                    {
                        switch (distanceUnit)
                        {
                            case"km":
                                return 500;
                            case"mi":
                                return 546.8
                        }
                    }, SliderMinDisplay: function()
                    {
                        switch (distanceUnit)
                        {
                            case"km":
                                return 10;
                            case"mi":
                                return 10..metersToMiles()
                        }
                    }, SliderMaxDisplay: function()
                    {
                        switch (distanceUnit)
                        {
                            case"km":
                                return 500;
                            case"mi":
                                return 546.8.metersToMiles()
                        }
                    }
            }
}(),
Colors = function()
{
    return {
            Black: "000000", Red: "FF0000", LightRed: "FE2E2E", Green: "00FF33", LightBlue: "1874CD", ZoneFillColor: "00AAFF", Pink: "FF00CC", Purple: "CC00CC", List: ["FF0000", "00FF33", "1874CD", "00AAFF", "FF00CC", "CC00CC"]
        }
}(),
Zone.prototype.JSONId = IdToJSONString,
Zone.prototype.ToJSONString = function(n)
{
    var i = this.Comment == null || this.Comment == "" || this.Comment == "null" ? null : '"' + this.Comment + '"',
        t = ['{"Id":' + this.Id, ',"Name":"' + this.Name, '","Comment":' + i, ',"ZoneType":' + this.ZoneType, ',"Designation":' + this.Designation, ',"Points":' + DoubleArrayToJSONString(this.Points), ',"PointRadiusMeters":' + this.PointRadiusMeters, ',"IsTrackingZone":' + this.IsTrackingZone, ',"CategoryId":' + (this.CategoryId == undefined ? null : this.CategoryId), "}"];
    return arguments.length == 0 ? t.join("") : '{"' + n + '":' + t.join("") + "}"
},
Zone.prototype.ToTableString = function()
{
    var t = "src='" + URL.PRIVATE + "' alt='Private' title='Private. Click to change to Business'",
        i,
        n,
        r,
        u;
    return (this.Designation == 2 || this.Designation == 4) && (t = "src='" + URL.BUSINESS + "' alt='Business' title='Business. Click to change to Private'"), i = this.Comment == null ? "" : this.Comment, n = "", $("#thCategory").length > 0 && (this.CategoryId == null || this.CategoryId == 0 ? n = "<td class='cat'><div data-c='0' class='cat catEmpty'><\/div><\/td>" : (r = GetCategoryDiv(this.CategoryId), n = ["<td class='cat'>", r, "<\/td>"].join(""))), u = ["<tr id='", this.Id, "'>", n, "<td  class='comment'>", this.Name, "<\/td><td><img id='Designation", this.Id, "'", t, " style='cursor:pointer'/><\/td><td id='Comment", this.Id, "' class='comment'>", i, "<\/td><td><a href='e'>Edit<\/a><\/td>", "<td><a href='d' style='color:Red;'>X<\/a><\/td>", "<\/tr>"], u.join("")
},
Zone.prototype.Save = function(n, t)
{
    DoAjax({
        data: this.ToJSONString("zo"), url: "/MappingWebService.asmx/EditPoint", successCallback: n, errorCallback: t, timeout: 6e4
    }, "We are saving the changes to the zone and we might have to reprocess some trip data.<br/>Please wait...")
},
Zone.prototype.Equals = function(n)
{
    return this.Id == n.Id && this.Name == n.Name && this.ZoneType == n.ZoneType && this.Designation == n.Designation && parseInt(this.PointRadiusMeters) == parseInt(n.PointRadiusMeters) && this.Comment == n.Comment && this.CategoryId == n.CategoryId
},
Zone.prototype.PointsEqual = function(n)
{
    var i = this.Points.length,
        t;
    if (i != n.length)
        return !1;
    for (t = 0; t < i; t++)
        if (!(this.Points[t][0] == n[t][0] && this.Points[t][1] == n[t][1]))
            return !1;
    return !0
},
Trip.prototype.Bounds = 0,
Trip.prototype.Markers = [],
Trip.prototype.TripAdjustment = [],
Trip.prototype.MapCenter,
Trip.prototype.MapZoom,
Trip.prototype.JSONId = IdToJSONString,
Trip.prototype.ToJSONString = function(n)
{
    var r,
        u,
        t = this.StartZoneId,
        i = this.EndZoneId,
        f,
        e;
    return t == null && (t = -1), i == null && (i = -1), r = this.StartLoc == null ? "null" : typeof this.StartLoc.Name != "undefined" ? '"' + this.StartLoc.Name + '"' : '"' + this.StartLoc + '"', u = this.EndLoc == null ? "null" : typeof this.EndLoc.Name != "undefined" ? '"' + this.EndLoc.Name + '"' : '"' + this.EndLoc + '"', f = this.Comment == null || this.Comment == "" || this.Comment == "null" ? null : '"' + this.Comment + '"', e = ['{"Id":' + this.Id, ',"Points":null', ',"TripStartDate":"' + this.TripStartDate, '","TripEndDate":"' + this.TripEndDate, '","Distance":' + this.Distance, ',"Duration":"' + this.Duration, '","StartLoc":' + r, ',"EndLoc":' + u, ',"StartZoneId":"' + t, '","EndZoneId":"' + i, '","Designation":' + this.Designation, ',"CategoryId":' + this.CategoryId, ',"MaxSpeed":' + this.MaxSpeed, ',"AvgSpeed":' + this.AvgSpeed, ',"Comment":' + f, ',"LineWKT":"' + this.WKT, '","VehicleId":' + this.VehicleId, ',"StartZoneSnapped":' + this.StartZoneSnapped, ',"EndZoneSnapped":' + this.EndZoneSnapped, ',"StartZoneSelected":' + this.StartZoneSelected, ',"EndZoneSelected":' + this.EndZoneSelected, ',"MergedTrip":' + this.MergedTrip, ',"DriverId":' + this.DriverId, "}"], '{"' + n + '":' + e.join("") + "}"
},
Trip.prototype.ToTableRow = function(n)
{
    var h = GetZoneTd(this.StartZoneId, this.StartLoc, this.StartZoneSnapped, this.StartZoneSelected, "sz"),
        c = GetZoneTd(this.EndZoneId, this.EndLoc, this.EndZoneSnapped, this.EndZoneSelected, "ez"),
        e = "src='" + URL.PRIVATE + "' alt='Private' title='Private. Click to change to Business'",
        t,
        i,
        f,
        o,
        r,
        s,
        u;
    return (this.Designation == 2 || this.Designation == 4) && (e = "src='" + URL.BUSINESS + "' alt='Business' title='Business. Click to change to Private'"), t = new Date(this.TripStartDate), t = t.toShortTimeString(), i = new Date(this.TripEndDate), i = i.toShortTimeString(), f = t + " - " + i, this.MergedTrip === !0 && (f += "<span class='id' title='Merged Trip'>&nbsp;&nbsp;+<\/span>"), o = this.Comment == null ? "" : this.Comment, r = "", $("#thCategory").length > 0 && (this.CategoryId == null || this.CategoryId == 0 ? r = "<td class='cat'><div data-c='0' class='cat catEmpty'><\/div><\/td>" : (s = GetCategoryDiv(this.CategoryId), r = ["<td class='cat'>", s, "<\/td>"].join(""))), u = ["<tr id='", this.Id, "'>" + r + "<td class='comment'>", f, "<\/td>", h, c, "<td>" + Format.Distance(this.Distance) + "<\/td>", "<td>" + this.Duration.removeSeconds() + "<\/td>", "<td><img id='Designation" + this.Id + "'" + e + " style='cursor:pointer'/><\/td>", "<td id='Comment" + this.Id + "' class='comment'><span class='edit'>" + o + "<\/span><\/td>", "<td><img src='" + URL.EDIT + "' alt='Edit Comment' title='Edit Comment' /><\/td><td><span class='link' data-a='vt' title='View trip on map'>View<\/span><\/td>"], n != null && u.push(["<td class='car-column'><span class='vehicleDropDown link' data-a='cv' title='Click to change vehicle'>" + n + "<\/span><\/td>"]), u.push("<\/tr>"), u.join("")
},
Trip.prototype.ToDriverTableRow = function(n, t, i)
{
    var s = t.checkPermission(256) ? "sz" : null,
        p = GetZoneTd(this.StartZoneId, this.StartLoc, this.StartZoneSnapped, this.StartZoneSelected, s),
        a,
        h,
        r,
        v,
        c,
        f,
        e,
        l,
        o,
        y,
        u;
    return s = t.checkPermission(256) ? "ez" : null, a = GetZoneTd(this.EndZoneId, this.EndLoc, this.EndZoneSnapped, this.EndZoneSelected, s), t.checkPermission(4) ? (r = "src='" + URL.PRIVATE + "' alt='Private' title='Private. Click to change to Business'", (this.Designation == 2 || this.Designation == 4) && (r = "src='" + URL.BUSINESS + "' alt='Business' title='Business. Click to change to Private'"), h = "<td><img id='Designation" + this.Id + "'" + r + "/><\/td>") : (r = "src='" + URL.PRIVATE + "' alt='Private'", (this.Designation == 2 || this.Designation == 4) && (r = "src='" + URL.BUSINESS + "' alt='Business'"), h = "<td><img " + r + " class='blocked'/><\/td>"), c = this.Comment == null ? "" : this.Comment, v = t.checkPermission(2) ? "<td id='Comment" + this.Id + "' class='comment'><span class='edit'>" + c + "<\/span><\/td><td><img src='" + URL.EDIT + "' alt='Edit Comment' title='Edit Comment'/><\/td>" : "<td class='comment'>" + c + "<\/td><td><\/td>", f = new Date(this.TripStartDate), f = f.toShortTimeString(), e = new Date(this.TripEndDate), e = e.toShortTimeString(), l = f + " - " + e, this.MergedTrip === !0 && (l += "<span class='id' title='Merged Trip'>&nbsp;&nbsp;+<\/span>"), o = "", $("#thCategory").length > 0 && (this.CategoryId == null || this.CategoryId == 0 ? o = "<td class='cat'><div data-c='0' class='cat catEmpty" + (t.checkPermission(8) ? "" : " blocked") + "'><\/div><\/td>" : (y = GetCategoryDiv(this.CategoryId, !0, t.checkPermission(8)), o = ["<td class='cat'>", y, "<\/td>"].join(""))), u = ["<tr id='", this.Id, "'>" + o + "<td class='comment'>", l, "<\/td>", p, a, "<td>" + Format.Distance(this.Distance) + "<\/td>", "<td>" + this.Duration.removeSeconds() + "<\/td>", h, v, "<td><span class='link' data-a='vt' title='View trip on map'>View<\/span><\/td>"], n != null && (t.checkPermission(16) ? u.push(["<td class='car-column'><span class='vehicleDropDown link' data-a='cv' title='Click to change vehicle'>" + n + "<\/span><\/td>"]) : u.push(["<td class='car-column'>" + n + "<\/td>"])), (changedriver = !1) ? u.push(["<td class='driver-column'><span class='vehicleDropDown' data-a='cd' title='Click to change driver'>" + (i == null ? "N.A." : i) + "<\/span><\/td>"]) : u.push(["<td class='driver-column'>" + (i == null ? "-" : i) + "<\/td>"]), u.push("<\/tr>"), u.join("")
},
Trip.prototype.Save = function(n, t)
{
    DoAjax({
        data: this.ToJSONString("to"), url: "/MappingWebService.asmx/EditTrip", successCallback: n, errorCallback: t, doAsync: !1
    })
},
Trip.prototype.ChangeCategory = function(n, t, i)
{
    DoAjax({
        url: "/MappingWebService.asmx/ChangeCategory", data: '{"tripId":' + this.Id + ', "categoryId":' + n + "}", successCallback: function(n)
            {
                n.d[0] == !0 && UserMappingSettings.AllowTripCategorization == !0 && n.d.length == 3 && (n.d[2].unshift({
                    iCategoryId: 0, sCategory: "None", sColourHex: "transparent"
                }), n.d[2].push({
                    iCategoryId: -99, sCategory: "Edit", sColourHex: "transparent"
                }), pCategoryPopup.setDatasource(n.d[2]), UserMappingSettings.Categories = n.d[2]),
                t(n)
            }, errorCallback: i, doAsync: !1
    })
},
Trip.prototype.GetPoints = function()
{
    var n = this.Points,
        r,
        u = this.Id,
        i = !0,
        t;
    return (this.Points == undefined || this.Points.length == 0) && (t = "{'tripId':" + u + ", 'startIndex':null}", DoAjax({
            data: t, url: "/MappingWebService.asmx/GetTripDataRange", successCallback: function(f)
                {
                    var e = f.d[1];
                    for (n = f.d[0]; e === !0; )
                        t = "{'tripId':" + u + ", 'startIndex':" + (n[n.length - 1][2] + 1) + "}",
                        DoAjax({
                            data: t, url: "/MappingWebService.asmx/GetTripDataRange", successCallback: function(t)
                                {
                                    e = t.d[1],
                                    n.add(t.d[0])
                                }, errorCallback: function(t, r)
                                {
                                    e = !1,
                                    n = null,
                                    alert(r),
                                    i = !1
                                }, doAsync: !1
                        });
                    r = f.d.LineWKT
                }, errorCallback: function(t, r)
                {
                    n = null,
                    alert(r),
                    i = !1
                }, doAsync: !1
        })), this.Points = n, this.WKT = r, i
},
String.prototype.truncate = function(n)
{
    if (this.length <= n)
        return this;
    var t = this.substr(0, n - 3);
    return t + "..."
},
String.prototype.removeSeconds = function()
{
    var u = this.indexOf("min") > 0 || this.indexOf("m") > 0,
        t,
        n,
        i,
        r;
    return u ? (t = {}, n = this.split(" "), n[1] == "hr" && (t.hr = new Number(n[0])), n[1] == "min" || n[1] == "m" ? t.min = new Number(n[0]) : (n[3] == "min" || n[3] == "m") && (t.min = new Number(n[2])), n[3] == "sec" || n[3] == "s" ? t.sec = new Number(n[2]) : (n[5] == "sec" || n[5] == "s") && (t.sec = new Number(n[4])), i = t.hr == undefined ? null : t.hr + " hr ", t.min == undefined) ? t.sec + " sec" : (r = t.sec != undefined && t.sec >= 30 ? t.min + 1 + " min " : t.min + " min ", i != null ? i + r : r) : this
},
String.prototype.hash = function()
{
    return "#" + this
},
String.prototype.trim == undefined && (String.prototype.trim = function()
{
    return this.replace(/\A\s+/g, "").replace(/\s+\Z/g, "")
}),
Date.prototype.prevMonth = function()
{
    var t = this.getMonth(),
        n = new Date(this);
    return n.setMonth(t - 1), n
},
Date.prototype.nextMonth = function()
{
    var t = this.getMonth(),
        n = new Date(this);
    return n.setMonth(t + 1), n
},
Date.prototype.toFormattedString = function()
{
    var u = this.getFullYear().toString(),
        r = (this.getMonth() + 1).toString(),
        n,
        t,
        i;
    return r.length == 1 && (r = "0" + r), n = this.getDate().toString(), n.length == 1 && (n = "0" + n), t = this.getHours().toString(), t.length == 1 && (t = "0" + t), i = this.getMinutes().toString(), i.length == 1 && (i = "0" + i), u + r + n + t + i
},
Date.prototype.toFormattedString2 = function()
{
    var i = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"][this.getMonth()],
        n = this.getMinutes().toString(),
        t;
    return n.length == 1 && (n = "0" + n), t = this.getHours() + ":" + n, [this.getDate().toString(), i, this.getFullYear().toString(), t].join(" ")
},
Date.prototype.toShortTimeString = function()
{
    var t = this.getHours().toString(),
        n;
    return t.length == 1 && (t = "0" + t), n = this.getMinutes().toString(), n.length == 1 && (n = "0" + n), t + ":" + n
},
Date.prototype.toLongTimeString = function()
{
    var i = this.getHours().toString(),
        n,
        t;
    return i.length == 1 && (i = "0" + i), n = this.getMinutes().toString(), n.length == 1 && (n = "0" + n), t = this.getSeconds().toString(), t.length == 1 && (t = "0" + t), i + ":" + n + ":" + t
},
Date.prototype.toEndOfDay = function()
{
    this.setHours(23),
    this.setMinutes(59),
    this.setSeconds(59)
},
Date.prototype.toStartOfDay = function()
{
    this.setHours(0),
    this.setMinutes(0),
    this.setSeconds(0)
},
Time.prototype.add = function(n)
{
    var t,
        i;
    this.Hours += n.Hours,
    this.Minutes += n.Minutes,
    this.Seconds += n.Seconds,
    this.Seconds >= 60 && (t = parseInt(this.Seconds / 60), this.Seconds -= t * 60, this.Minutes += t),
    this.Minutes >= 60 && (i = parseInt(this.Minutes / 60), this.Minutes -= i * 60, this.Hours += i)
},
Time.prototype.toString = function(n)
{
    return this.Hours > 0 ? this.Hours + " hr " + this.Minutes + " min" : this.Minutes > 0 ? this.Minutes + " min" + (n === !0 ? " " + this.Seconds + " sec" : "") : this.Seconds > 0 && n === !0 ? this.Seconds + " sec" : void 0
},
Number.prototype.getHeading = function()
{
    return this >= 345 || this <= 15 ? "N" : this > 15 && this < 75 ? "NE" : this >= 75 && this <= 105 ? "E" : this > 105 && this < 165 ? "SE" : this >= 165 && this <= 195 ? "S" : this > 195 && this < 255 ? "SW" : this >= 255 && this <= 285 ? "W" : "NW"
},
Number.prototype.checkPermission = function(n)
{
    return (this & n) > 0
},
Array.prototype.add = function(n)
{
    for (var i = this.length, r = n.length, t = 0; t < r; t++)
        this[i + t] = n[t]
},
PopulateMonthSelector = function(n)
{
    for (var e = n.getMonth(), r = n.getFullYear(), s = ["Jan ", "Feb ", "Mar ", "Apr ", "May ", "Jun ", "Jul ", "Aug ", "Sept ", "Oct ", "Nov ", "Dec "], u = [], o = [], t = 0, f, i = 0; i < e + 1; i++)
    {
        if (f = e - i, u[t] = s[f] + r, o[t] = '<option value="' + (f + 1) + "-" + r + '">' + u[t] + "<\/option>", f <= 0 && (e = 11, i = -1, r = r - 1), t += 1, u[t - 1] == "Mar 2011")
            break;
        if (t == 24)
            break
    }
    return {
            OptionArray: o, MonthArray: u
        }
},
InvalidShapeMsg = "Invalid shape. A shape may not intersect itself. Please redraw the shape",
CheckCategorization = function(n)
{
    if (ViewingDriverProfile() == !1)
    {
        if (UserMappingSettings != undefined && UserMappingSettings.AllowTripCategorization)
        {
            if (arguments.length > 0)
            {
                var t = getVehicle(n);
                return t.iDeviceId != null ? (t.fDeviceActiveSubscription == !1 && ($.blockUI == undefined ? alert("The vehicle does not have an active subscription that allows categorization") : alertUI("The vehicle does not have an active subscription that allows categorization", 3e3)), t.fDeviceActiveSubscription) : !0
            }
            return !0
        }
        return null
    }
    return m_DriverProfile.CheckCategorization(n)
},
URL = function()
{
    return {
            PRIVATE: "../Images/private.png", BUSINESS: "../Images/business.png", EDIT: "../Images/edit.png", DOWN: "../Images/so_down.png", UP: "../Images/so_up.png", DELETE: "../Images/delete.png", PIN: "../Images/pin.png"
        }
}(),
MESSAGES = function()
{
    return {
            COMMENT_LENGTH: "Comment length may not exceed 255 characters.", WS_ERR_DELETE_TRIP: "There was an error in the webservice and the trip was not deleted.", INFO_CIRCLE: "Drag the pin to position the zone and adjust the zone radius with the slider.", INFO_CUSTOM: "Drag the pins to change the zone's shape.", INFO_CIRCLE_NEW: "Click on the map to place the center of a new circular zone.", INFO_CUSTOM_NEW: "Click the outline of the new shape on the map. Click on the pin to close the shape.", REDRAW_CUSTOM: "Discard this shape and draw a new one", REPLACE_CUSTOM: "Replace this zone shape with a circle", REPLACE_CIRCLE: "Replace the zone circle with a shape", CHANGE_ZONE_SHAPE: "By changing the shape of your zone, some of your trips \nwill now fall outside the zone, and be marked as 'unknown'.\nDo you want to continue?", INVALID_SHAPE_INTERSECT: "Invalid shape. A shape may not intersect itself. Please redraw the shape", WS_ERR_DELETE_ZONE: "There was an error in the webservice and the zone was not deleted.", WS_ERR_SAVE_ZONE: "Zone not saved!\nDo you want to try again?", PLACE_CIRCLE: "Please click on the map to create your zone", PLACE_CUSTOM: "Please click on the map to draw a shape on the map.", INVALID_SHAPE_POINTS: "Invalid shape! A shape must have 4 or more points. \nPlease redraw the shape.", INVALID_SHAPE_OPEN: "Please click on the pin to close the shape!"
        }
}(),
Zones = function()
{
    this.SelectedZone = null
},
Zones.prototype = [],
Zones.prototype.constructor = Zones,
Zones.prototype.defaultPoly = {
    strokeColor: Colors.Black.hash(), strokeOpacity: .8, strokeWeight: 2, fillColor: Colors.ZoneFillColor.hash()
},
Zones.prototype.setSelected = function(n)
{
    var t;
    isNaN(parseInt(n)) == !1 ? this.SelectedZone == null ? this.SelectedZone = this.GetZone(n, !1) : this.SelectedZone.Id != n && (this.SelectedZone = this.GetZone(n, !1)) : this.SelectedZone == null ? (t = this.GetZone(n.Id, !1), t == null && (this.push(n), t = n), this.SelectedZone = t) : this.SelectedZone.Id != n && (t = this.GetZone(n.Id, !1), t == null && (this.push(n), t = n), this.SelectedZone = t)
},
Zones.prototype.pushRange = function(n)
{
    for (var i = n.length, t = 0; t < i; t++)
        this.push(new Zone(n[t]))
},
Zones.prototype.DrawZoneFeature = function(n, t, i)
{
    var f,
        o,
        r,
        s,
        u;
    if (n.ZoneType == 1)
    {
        var h = new google.maps.LatLng(n.Points[0][1], n.Points[0][0]),
            c = {
                center: h, clickable: !1, map: i, radius: parseInt(n.PointRadiusMeters), zIndex: n.Id
            },
            e = new google.maps.Circle(c);
        e.setOptions(this.defaultPoly),
        n.Geometry = e
    }
    else if (n.ZoneType == 2)
    {
        for (f = [], o = n.Points.length, r = 0; r < o; r++)
            f[r] = new google.maps.LatLng(n.Points[r][1], n.Points[r][0]);
        s = {
            map: i, clickable: !1, path: f, strokeWeight: 2
        },
        u = new google.maps.Polygon(s),
        u.setMap(i),
        u.setOptions(this.defaultPoly),
        n.Geometry = u
    }
},
Zones.prototype.GetZone = function(n, t)
{
    var i = null,
        r = this;
    return $.each(this, function(u, f)
        {
            if (parseInt(n) == f.Id)
                return t === !0 && (f.Geometry == null ? r.DrawZoneFeature(f, null, null) : f.Geometry.setOptions(r.defaultPoly)), i = f, i.index = u, !1
        }), i
},
Zones.prototype.GetAllIds = function()
{
    var n = [];
    return $.each(this, function(t, i)
        {
            n.push(i.Id)
        }), n
},
Zones.prototype.GetName = function(n)
{
    if (n == null)
        return null;
    var t = this.GetZone(n);
    return t != null ? t.Name : null
},
Zones.prototype.DrawZone = function(n, t)
{
    var i,
        o,
        c,
        e,
        u,
        l,
        f,
        a,
        v;
    if (i = n.Id !== undefined ? n : this.GetZone(id), i.ZoneType == 1)
    {
        o = new google.maps.LatLng(i.Points[0][1], i.Points[0][0]),
        c = {
            center: o, clickable: !0, strokeWeight: 1, radius: parseInt(i.PointRadiusMeters), zIndex: i.Id
        };
        try
        {
            e = new google.maps.Circle(c)
        }
        catch(y)
        {
            return LogError("Failed to create circle: " + y, "GoogleMapZoneHelper.js", 145), alert("Oops. we are experiencing a problem!"), null
        }
        i.Geometry = e;
        var r = new Label({
                map: t, zoom: 14
            }),
            s = e.getBounds().getSouthWest().lat(),
            h = new google.maps.LatLng(s, o.lng());
        return r.set("position", h), r.set("text", i.Name), i.Geometry.setMap(t), i.Geometry.Label = r, e.getBounds()
    }
    if (i.ZoneType == 2)
    {
        for (u = [], l = i.Points.length, f = 0; f < l; f++)
            u.push(new google.maps.LatLng(i.Points[f][1], i.Points[f][0]));
        a = {
            path: u, strokeWeight: 1
        },
        v = new google.maps.Polygon(a),
        i.Geometry = v;
        var s = GoogleMapExtensions.GetPolyBounds(u).getSouthWest().lat(),
            p = GoogleMapExtensions.GetPolySouthmostLng(u),
            h = new google.maps.LatLng(s, p),
            r = new Label({
                map: t, zoom: 14
            });
        return r.set("position", h), r.set("text", i.Name), i.Geometry.setMap(t), i.Geometry.Label = r, GoogleMapExtensions.GetPolyBounds(u)
    }
},
Zones.prototype.DrawZones = function(n, t, i)
{
    var u = [],
        r,
        e,
        f;
    n > 0 && (r = this.GetZone(n), r == null ? u.push(n) : r.Geometry == null ? this.DrawZoneFeature(r, !1, i) : (r.Geometry.setMap(i), r.Geometry.setOptions(this.defaultPoly))),
    t > 0 && n !== t && (r = this.GetZone(t), r == null ? u.push(t) : r.Geometry == null ? this.DrawZoneFeature(r, !1, i) : (r.Geometry.setMap(i), r.Geometry.setOptions(this.defaultPoly))),
    u.length > 0 && (e = IntArrayToJSONString("ids", u), f = this, $.ajax({
            type: "POST", url: "../MappingWebService.asmx/GetZonesById", contentType: "application/json; charset=utf-8", data: e, dataType: "json", success: function(r)
                {
                    var o = r.d.length,
                        e,
                        s,
                        u;
                    if (o > 0 && r.d[0] === !1)
                        return alert(r.d[2]), !1;
                    for (e = 0; e < o; e++)
                        s = r.d[e],
                        u = new Zone(s),
                        u.Id == n && f.push(u),
                        u.Id == t && n != t && f.push(u),
                        f.DrawZoneFeature(u, !1, i)
                }, async: !1
        }))
},
Zones.prototype.RemoveZones = function(n, t)
{
    var i;
    n > 0 && (i = this.GetZone(n), i !== null && i.Geometry != undefined && i.Geometry.setMap(null)),
    t > 0 && n != t && (i = this.GetZone(t), i !== null && i.Geometry != undefined && i.Geometry.setMap(null))
},
Zones.prototype.UpdateZone = function(n, t)
{
    var i = this.GetZone(n.Id);
    i != null ? (i.Geometry != null && (i.Geometry.setMap(null), t === !0 && (i.Geometry = null)), i = n) : (n.Geometry != null && n.Geometry.setMap(null), this.push(n))
},
Zones.prototype.RemoveAllBut = function(n)
{
    $.each(this, function(t, i)
    {
        i.Id != n && i.Geometry != null && (i.Geometry.setMap(null), i.Geometry.Label != undefined && (i.Geometry.Label.setMap(null), i.Geometry.Label = null))
    })
},
Zones.prototype.Delete = function(n)
{
    var t = this.GetZone(n);
    t != null && this.splice(t.index, 1)
}