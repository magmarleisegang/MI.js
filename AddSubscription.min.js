function SetTotal()
{
    if ($("#grdQuote tbody tr").length == 0)
        $("#divAddSub_Quote, #divPayment, #btnAddSub_Ok, #divStartDate").hide();
    else
    {
        $("#divAddSub_Quote, #divPayment, #btnAddSub_Ok").show();
        var n = 0;
        $("#grdQuote tbody tr td.amount").each(function(t, i)
        {
            n += parseFloat($(i).text())
        }),
        $("#grdQuote tfoot td.total span").text(n.toFixed(2))
    }
}
function SetSelected()
{
    var n = $("#ddlAddSub_Device").val();
    $("div[id^=sc] > input[type=hidden]").val(null),
    $("#grdQuote tbody tr[id^=" + n + "]").each(function(n, t)
    {
        id = t.id.split("-");
        var i = id[1],
            r = id[2];
        $("div#sc" + i + " > input[type=hidden]").val(r)
    }),
    SubscriptionList.SetSelected()
}
function CheckQuote(n, t, i)
{
    var r,
        u,
        f;
    lastSelected = n,
    arguments.length == 1,
    r = $("#ddlPaymentGateway").length > 0 ? $("#ddlPaymentGateway").val() : $("#hidPaymentGateway").val(),
    u = $("#ddlAddSub_Device").val(),
    f = [lastSelected, t, i].join(","),
    Calculating(!0),
    this.disabled = "disabled",
    currentAjax = DoAjax({
        url: "/SubscriptionWebService.asmx/UpdateSubscriptionQuote", data: '{"deviceId": ' + u + ', "typeStartPeriod":"' + f + '", "gatewaySetting": ' + r + "}", successCallback: function(n)
            {
                var t;
                if (n.d[0] == !0)
                {
                    var i = n.d[1],
                        r = n.d[1].length,
                        u = n.d[1][0].DeviceId,
                        f = n.d[1][0].CategoryId;
                    for ($("#grdQuote tbody tr[data-id=" + u + "][data-cat=" + f + "]").remove(), t = 0; t < r; t++)
                        rowTemplate.add(i[t]);
                    SetTotal(),
                    n.d.length == 3 && (startDate = n.d[2], startDate[0] == !1 && startDate[1] == !1 ? ($("#divStartDate_Cal").datepicker("setDate", new Date), $("#divStartDate").hide()) : ($("#divStartDate").show(), $("#divStartDate_Cal").datepicker("option", "maxDate", startDate[0] == !1 ? new Date : null), $("#divStartDate_Cal").datepicker("option", "minDate", startDate[1] == !1 ? new Date : null), $("#txtStartDate").val().length == 0 && $("#divExpiry").hide()))
                }
                else
                    alertUI(n.d[1], 3e3)
            }, errorCallback: function(n, t)
            {
                alertUI(t, 3e3)
            }, completeCallback: function()
            {
                currentAjax = null,
                Calculating(!1)
            }
    })
}
function Calculating(n)
{
    n === !0 ? showCalc = setTimeout(function()
    {
        $("#pQuote_Calculating").show()
    }, 1e3) : (clearTimeout(showCalc), $("#pQuote_Calculating").hide())
}
function SetupCalender(n, t, i, r)
{
    var f = $(t),
        u = $(n);
    r && (u.onchange = r),
    f.datepicker({
        onSelect: function(n)
        {
            u.val(n),
            u.onchange && u.onchange()
        }, dateFormat: "yy-mm-dd", changeYear: "true"
    })
}
function wait()
{
    alertUI("Please wait while we process your purchase<br/>Please do not use the back button on your browser.")
}
var quoteTotal = 0,
    rowTemplate,
    showCalc;
$(document).ready(function()
{
    showCalc = null,
    rowTemplate = $("#grdQuote tbody").createTemplater("#subscriptionQuoteTemplate"),
    SubscriptionList.Bind(CheckQuote),
    SetSelected(),
    $("#divStartDate").hide(),
    $("#rdNew, #rdCurrent").change(function()
    {
        $("#ddlCurrentPaymentInfos").prop("disabled", $("#rdCurrent:checked").length == 0)
    }),
    $("#btnAddSub_Ok").click(function(n)
    {
        var i,
            t;
        if (n.preventDefault(), n.stopPropagation(), $("#grdQuote tbody tr").length == 0)
            return alertUI("Please select a subscription", 3e3), !1;
        setTimeout(wait, 100),
        i = $("#ddlPaymentGateway").length > 0 ? $("#ddlPaymentGateway").val() : $("#hidPaymentGateway").val(),
        t = null,
        $("#rdCurrent:checked").length > 0 && (t = $("#ddlCurrentPaymentInfos").val()),
        PaymentScript.CallPaymentService("../SubscriptionWebService.asmx/UserAddSubscription", '{"paymentInfoId":' + t + ', "gatewaySetting": ' + i + "}", null, "Creating Subscription")
    }),
    $("a[href=remove]").live("click", function(n)
    {
        var t;
        if (n.preventDefault(), t = $(this.parentNode.parentNode), t.length > 0)
        {
            var i = t.data("id"),
                r = t.data("type"),
                u = [r, "0,0"].join(",");
            currentAjax = DoAjax({
                url: "/SubscriptionWebService.asmx/UpdateSubscriptionQuote", data: '{"deviceId": ' + i + ', "typeStartPeriod":"' + u + '", "gatewaySetting": 0}', successCallback: function(n)
                    {
                        if (n.d[0] == !0)
                        {
                            var i = t.data("id"),
                                r = t.data("cat");
                            $("#grdQuote tbody tr[data-id=" + i + "][data-cat=" + r + "]").remove(),
                            SetTotal(),
                            SetSelected()
                        }
                    }
            })
        }
    }),
    $("#ddlPaymentGateway").change(function()
    {
        $.blockUI && $.blockUI({message: "Please wait"})
    }),
    SetupCalender("#txtStartDate", "#divStartDate_Cal", !1, function()
    {
        var n = this.val().split("-"),
            f = n[1] - 1,
            r = parseInt($("div#st" + lastSelected + " div.period").html().replace(/\D/g, ""));
        if (n = new Date(n[0], n[1] - 1, n[2]), n.isToday() || n > new Date)
            $("#divExpiry").hide();
        else
        {
            n.setMonth(n.getMonth() + r);
            for (var t = [], u = !0, i = n > new Date; u == i || i == !1; )
                u = !i,
                t.push(["<option value='", t.length + 1, "'>", n.toFormattedString(), "<\/option>"].join("")),
                n.setMonth(n.getMonth() + r),
                i = n > new Date;
            t.length > 0 ? ($("#ddlPossibleEndDates").html(t.join("")), t.length == 1 ? $("#divExpiry").hide() : $("#divExpiry").show()) : alert(["Last Selected:", lastSelected, ", date:", ].join(""))
        }
        CheckQuote(lastSelected, this.val(), 1)
    }),
    $("#ddlPossibleEndDates").change(function()
    {
        CheckQuote(lastSelected, $("#txtStartDate").val(), $(this).val())
    }),
    $("input.voucher").live("keyup", function()
    {
        $this = $(this);
        var n = this.value;
        /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i.test(n) != !1 && DoAjax({
            url: "/SubscriptionWebService.asmx/LoadSubscriptionVoucher", data: '{"deviceId": ' + $("#ddlAddSub_Device").val() + ',"voucher":"' + n + '"}', successCallback: function(n)
                {
                    if (n.d[0] == !1)
                        alertUI(n.d[1], 3e3);
                    else
                    {
                        var t = n.d[1],
                            i = n.d[2],
                            r = n.d[3];
                        $("#grdQuote tbody tr[id^=" + t + "]").remove(),
                        rowTemplate.add(i),
                        $("div#divSubVouchers div").append("<input class='voucher' />"),
                        SetTotal()
                    }
                }
        })
    }),
    SetTotal()
}),
Date.prototype.toFormattedString = function()
{
    var i = this.getFullYear().toString(),
        t = (this.getMonth() + 1).toString(),
        n;
    return t.length == 1 && (t = "0" + t), n = this.getDate().toString(), n.length == 1 && (n = "0" + n), [i, t, n].join("-")
},
Date.prototype.isToday = function()
{
    var n = new Date;
    return n.getFullYear() == this.getFullYear() && n.getMonth() == this.getMonth() && n.getDate() == this.getDate()
}